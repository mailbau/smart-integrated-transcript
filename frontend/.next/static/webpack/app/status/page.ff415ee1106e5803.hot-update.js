"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/status/page",{

/***/ "(app-pages-browser)/./lib/api.ts":
/*!********************!*\
  !*** ./lib/api.ts ***!
  \********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API_URL: function() { return /* binding */ API_URL; },\n/* harmony export */   api: function() { return /* binding */ api; },\n/* harmony export */   apiUpload: function() { return /* binding */ apiUpload; },\n/* harmony export */   getTemplateLink: function() { return /* binding */ getTemplateLink; }\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:8080/api\";\nasync function api(path, init) {\n    const res = await fetch(\"\".concat(API_URL).concat(path), {\n        credentials: \"include\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...(init === null || init === void 0 ? void 0 : init.headers) || {}\n        },\n        ...init\n    });\n    if (!res.ok) throw new Error(await res.text());\n    return res.json();\n}\nasync function apiUpload(path, form) {\n    const res = await fetch(\"\".concat(API_URL).concat(path), {\n        method: \"POST\",\n        credentials: \"include\",\n        body: form\n    });\n    if (!res.ok) throw new Error(await res.text());\n    return res.json();\n}\nasync function getTemplateLink() {\n    const res = await fetch(\"\".concat(API_URL, \"/settings/template-link\"), {\n        credentials: \"include\"\n    });\n    if (!res.ok) return null;\n    const data = await res.json();\n    return data.templateLink || null;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9hcGkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBTyxNQUFNQSxVQUFVQyxPQUFPQSxDQUFDQyxHQUFHLENBQUNDLG1CQUFtQixJQUFJLDRCQUE0QjtBQUkvRSxlQUFlQyxJQUFJQyxJQUFZLEVBQUVDLElBQWtCO0lBQ3hELE1BQU1DLE1BQU0sTUFBTUMsTUFBTSxHQUFhSCxPQUFWTCxTQUFlLE9BQUxLLE9BQVE7UUFDM0NJLGFBQWE7UUFDYkMsU0FBUztZQUFFLGdCQUFnQjtZQUFvQixHQUFJSixDQUFBQSxpQkFBQUEsMkJBQUFBLEtBQU1JLE9BQU8sS0FBSSxDQUFDLENBQUM7UUFBRTtRQUN4RSxHQUFHSixJQUFJO0lBQ1Q7SUFDQSxJQUFJLENBQUNDLElBQUlJLEVBQUUsRUFBRSxNQUFNLElBQUlDLE1BQU0sTUFBTUwsSUFBSU0sSUFBSTtJQUMzQyxPQUFPTixJQUFJTyxJQUFJO0FBQ2pCO0FBRU8sZUFBZUMsVUFBVVYsSUFBWSxFQUFFVyxJQUFjO0lBQzFELE1BQU1ULE1BQU0sTUFBTUMsTUFBTSxHQUFhSCxPQUFWTCxTQUFlLE9BQUxLLE9BQVE7UUFDM0NZLFFBQVE7UUFDUlIsYUFBYTtRQUNiUyxNQUFNRjtJQUNSO0lBQ0EsSUFBSSxDQUFDVCxJQUFJSSxFQUFFLEVBQUUsTUFBTSxJQUFJQyxNQUFNLE1BQU1MLElBQUlNLElBQUk7SUFDM0MsT0FBT04sSUFBSU8sSUFBSTtBQUNqQjtBQUVPLGVBQWVLO0lBQ3BCLE1BQU1aLE1BQU0sTUFBTUMsTUFBTSxHQUFXLE9BQVJSLFNBQVEsNEJBQTBCO1FBQzNEUyxhQUFhO0lBQ2Y7SUFDQSxJQUFJLENBQUNGLElBQUlJLEVBQUUsRUFBRSxPQUFPO0lBQ3BCLE1BQU1TLE9BQU8sTUFBTWIsSUFBSU8sSUFBSTtJQUMzQixPQUFPTSxLQUFLQyxZQUFZLElBQUk7QUFDOUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL2FwaS50cz82OGExIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBBUElfVVJMID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVBJX1VSTCB8fCAnaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaSc7XG5cblxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gYXBpKHBhdGg6IHN0cmluZywgaW5pdD86IFJlcXVlc3RJbml0KSB7XG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke0FQSV9VUkx9JHtwYXRofWAsIHtcbiAgICBjcmVkZW50aWFsczogJ2luY2x1ZGUnLFxuICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywgLi4uKGluaXQ/LmhlYWRlcnMgfHwge30pIH0sXG4gICAgLi4uaW5pdFxuICB9KTtcbiAgaWYgKCFyZXMub2spIHRocm93IG5ldyBFcnJvcihhd2FpdCByZXMudGV4dCgpKTtcbiAgcmV0dXJuIHJlcy5qc29uKCk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhcGlVcGxvYWQocGF0aDogc3RyaW5nLCBmb3JtOiBGb3JtRGF0YSkge1xuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgJHtBUElfVVJMfSR7cGF0aH1gLCB7XG4gICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgY3JlZGVudGlhbHM6ICdpbmNsdWRlJyxcbiAgICBib2R5OiBmb3JtXG4gIH0pO1xuICBpZiAoIXJlcy5vaykgdGhyb3cgbmV3IEVycm9yKGF3YWl0IHJlcy50ZXh0KCkpO1xuICByZXR1cm4gcmVzLmpzb24oKTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFRlbXBsYXRlTGluaygpOiBQcm9taXNlPHN0cmluZyB8IG51bGw+IHtcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7QVBJX1VSTH0vc2V0dGluZ3MvdGVtcGxhdGUtbGlua2AsIHtcbiAgICBjcmVkZW50aWFsczogJ2luY2x1ZGUnXG4gIH0pO1xuICBpZiAoIXJlcy5vaykgcmV0dXJuIG51bGw7XG4gIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuICByZXR1cm4gZGF0YS50ZW1wbGF0ZUxpbmsgfHwgbnVsbDtcbn1cbiJdLCJuYW1lcyI6WyJBUElfVVJMIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX0FQSV9VUkwiLCJhcGkiLCJwYXRoIiwiaW5pdCIsInJlcyIsImZldGNoIiwiY3JlZGVudGlhbHMiLCJoZWFkZXJzIiwib2siLCJFcnJvciIsInRleHQiLCJqc29uIiwiYXBpVXBsb2FkIiwiZm9ybSIsIm1ldGhvZCIsImJvZHkiLCJnZXRUZW1wbGF0ZUxpbmsiLCJkYXRhIiwidGVtcGxhdGVMaW5rIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api.ts\n"));

/***/ })

});