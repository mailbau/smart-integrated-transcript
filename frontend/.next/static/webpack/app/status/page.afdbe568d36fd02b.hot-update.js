"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/status/page",{

/***/ "(app-pages-browser)/./lib/api.ts":
/*!********************!*\
  !*** ./lib/api.ts ***!
  \********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API_URL: function() { return /* binding */ API_URL; },\n/* harmony export */   api: function() { return /* binding */ api; },\n/* harmony export */   apiUpload: function() { return /* binding */ apiUpload; },\n/* harmony export */   downloadFile: function() { return /* binding */ downloadFile; },\n/* harmony export */   getDownloadUrl: function() { return /* binding */ getDownloadUrl; }\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:8080/api\";\nasync function getDownloadUrl(requestId, transcriptUrl) {\n    // Always get a fresh presigned URL from the backend\n    // This ensures we always get the correct URL regardless of stored URL changes\n    const res = await fetch(\"\".concat(API_URL, \"/requests/\").concat(requestId, \"/download\"), {\n        credentials: \"include\" // if you use cookies/session\n    });\n    if (!res.ok) throw new Error(\"Failed to fetch download URL\");\n    const data = await res.json();\n    return data.url;\n}\nasync function downloadFile(requestId, transcriptUrl) {\n    try {\n        // Create a direct download link to the backend endpoint\n        const downloadUrl = \"\".concat(API_URL, \"/requests/\").concat(requestId, \"/download\");\n        // Create a download link\n        const link = document.createElement(\"a\");\n        link.href = downloadUrl;\n        link.download = \"transcript-\".concat(requestId, \".pdf\");\n        // Trigger download\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    } catch (error) {\n        console.error(\"Download failed:\", error);\n        throw error;\n    }\n}\nasync function api(path, init) {\n    const res = await fetch(\"\".concat(API_URL).concat(path), {\n        credentials: \"include\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...(init === null || init === void 0 ? void 0 : init.headers) || {}\n        },\n        ...init\n    });\n    if (!res.ok) throw new Error(await res.text());\n    return res.json();\n}\nasync function apiUpload(path, form) {\n    const res = await fetch(\"\".concat(API_URL).concat(path), {\n        method: \"POST\",\n        credentials: \"include\",\n        body: form\n    });\n    if (!res.ok) throw new Error(await res.text());\n    return res.json();\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9hcGkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQU8sTUFBTUEsVUFBVUMsT0FBT0EsQ0FBQ0MsR0FBRyxDQUFDQyxtQkFBbUIsSUFBSSw0QkFBNEI7QUFFL0UsZUFBZUMsZUFBZUMsU0FBaUIsRUFBRUMsYUFBNkI7SUFDbkYsb0RBQW9EO0lBQ3BELDhFQUE4RTtJQUM5RSxNQUFNQyxNQUFNLE1BQU1DLE1BQU0sR0FBdUJILE9BQXBCTCxTQUFRLGNBQXNCLE9BQVZLLFdBQVUsY0FBWTtRQUNuRUksYUFBYSxVQUFVLDZCQUE2QjtJQUN0RDtJQUNBLElBQUksQ0FBQ0YsSUFBSUcsRUFBRSxFQUFFLE1BQU0sSUFBSUMsTUFBTTtJQUM3QixNQUFNQyxPQUFPLE1BQU1MLElBQUlNLElBQUk7SUFDM0IsT0FBT0QsS0FBS0UsR0FBRztBQUNqQjtBQUVPLGVBQWVDLGFBQWFWLFNBQWlCLEVBQUVDLGFBQTZCO0lBQ2pGLElBQUk7UUFDRix3REFBd0Q7UUFDeEQsTUFBTVUsY0FBYyxHQUF1QlgsT0FBcEJMLFNBQVEsY0FBc0IsT0FBVkssV0FBVTtRQUVyRCx5QkFBeUI7UUFDekIsTUFBTVksT0FBT0MsU0FBU0MsYUFBYSxDQUFDO1FBQ3BDRixLQUFLRyxJQUFJLEdBQUdKO1FBQ1pDLEtBQUtJLFFBQVEsR0FBRyxjQUF3QixPQUFWaEIsV0FBVTtRQUV4QyxtQkFBbUI7UUFDbkJhLFNBQVNJLElBQUksQ0FBQ0MsV0FBVyxDQUFDTjtRQUMxQkEsS0FBS08sS0FBSztRQUNWTixTQUFTSSxJQUFJLENBQUNHLFdBQVcsQ0FBQ1I7SUFDNUIsRUFBRSxPQUFPUyxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxvQkFBb0JBO1FBQ2xDLE1BQU1BO0lBQ1I7QUFDRjtBQUVPLGVBQWVFLElBQUlDLElBQVksRUFBRUMsSUFBa0I7SUFDeEQsTUFBTXZCLE1BQU0sTUFBTUMsTUFBTSxHQUFhcUIsT0FBVjdCLFNBQWUsT0FBTDZCLE9BQVE7UUFDM0NwQixhQUFhO1FBQ2JzQixTQUFTO1lBQUUsZ0JBQWdCO1lBQW9CLEdBQUlELENBQUFBLGlCQUFBQSwyQkFBQUEsS0FBTUMsT0FBTyxLQUFJLENBQUMsQ0FBQztRQUFFO1FBQ3hFLEdBQUdELElBQUk7SUFDVDtJQUNBLElBQUksQ0FBQ3ZCLElBQUlHLEVBQUUsRUFBRSxNQUFNLElBQUlDLE1BQU0sTUFBTUosSUFBSXlCLElBQUk7SUFDM0MsT0FBT3pCLElBQUlNLElBQUk7QUFDakI7QUFFTyxlQUFlb0IsVUFBVUosSUFBWSxFQUFFSyxJQUFjO0lBQzFELE1BQU0zQixNQUFNLE1BQU1DLE1BQU0sR0FBYXFCLE9BQVY3QixTQUFlLE9BQUw2QixPQUFRO1FBQzNDTSxRQUFRO1FBQ1IxQixhQUFhO1FBQ2JhLE1BQU1ZO0lBQ1I7SUFDQSxJQUFJLENBQUMzQixJQUFJRyxFQUFFLEVBQUUsTUFBTSxJQUFJQyxNQUFNLE1BQU1KLElBQUl5QixJQUFJO0lBQzNDLE9BQU96QixJQUFJTSxJQUFJO0FBQ2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2xpYi9hcGkudHM/NjhhMSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgQVBJX1VSTCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FQSV9VUkwgfHwgJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9hcGknO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0RG93bmxvYWRVcmwocmVxdWVzdElkOiBzdHJpbmcsIHRyYW5zY3JpcHRVcmw/OiBzdHJpbmcgfCBudWxsKSB7XG4gIC8vIEFsd2F5cyBnZXQgYSBmcmVzaCBwcmVzaWduZWQgVVJMIGZyb20gdGhlIGJhY2tlbmRcbiAgLy8gVGhpcyBlbnN1cmVzIHdlIGFsd2F5cyBnZXQgdGhlIGNvcnJlY3QgVVJMIHJlZ2FyZGxlc3Mgb2Ygc3RvcmVkIFVSTCBjaGFuZ2VzXG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke0FQSV9VUkx9L3JlcXVlc3RzLyR7cmVxdWVzdElkfS9kb3dubG9hZGAsIHtcbiAgICBjcmVkZW50aWFsczogXCJpbmNsdWRlXCIgLy8gaWYgeW91IHVzZSBjb29raWVzL3Nlc3Npb25cbiAgfSk7XG4gIGlmICghcmVzLm9rKSB0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gZmV0Y2ggZG93bmxvYWQgVVJMXCIpO1xuICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgcmV0dXJuIGRhdGEudXJsO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZG93bmxvYWRGaWxlKHJlcXVlc3RJZDogc3RyaW5nLCB0cmFuc2NyaXB0VXJsPzogc3RyaW5nIHwgbnVsbCkge1xuICB0cnkge1xuICAgIC8vIENyZWF0ZSBhIGRpcmVjdCBkb3dubG9hZCBsaW5rIHRvIHRoZSBiYWNrZW5kIGVuZHBvaW50XG4gICAgY29uc3QgZG93bmxvYWRVcmwgPSBgJHtBUElfVVJMfS9yZXF1ZXN0cy8ke3JlcXVlc3RJZH0vZG93bmxvYWRgO1xuICAgIFxuICAgIC8vIENyZWF0ZSBhIGRvd25sb2FkIGxpbmtcbiAgICBjb25zdCBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuICAgIGxpbmsuaHJlZiA9IGRvd25sb2FkVXJsO1xuICAgIGxpbmsuZG93bmxvYWQgPSBgdHJhbnNjcmlwdC0ke3JlcXVlc3RJZH0ucGRmYDtcbiAgICBcbiAgICAvLyBUcmlnZ2VyIGRvd25sb2FkXG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChsaW5rKTtcbiAgICBsaW5rLmNsaWNrKCk7XG4gICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChsaW5rKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdEb3dubG9hZCBmYWlsZWQ6JywgZXJyb3IpO1xuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhcGkocGF0aDogc3RyaW5nLCBpbml0PzogUmVxdWVzdEluaXQpIHtcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7QVBJX1VSTH0ke3BhdGh9YCwge1xuICAgIGNyZWRlbnRpYWxzOiAnaW5jbHVkZScsXG4gICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLCAuLi4oaW5pdD8uaGVhZGVycyB8fCB7fSkgfSxcbiAgICAuLi5pbml0XG4gIH0pO1xuICBpZiAoIXJlcy5vaykgdGhyb3cgbmV3IEVycm9yKGF3YWl0IHJlcy50ZXh0KCkpO1xuICByZXR1cm4gcmVzLmpzb24oKTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGFwaVVwbG9hZChwYXRoOiBzdHJpbmcsIGZvcm06IEZvcm1EYXRhKSB7XG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke0FQSV9VUkx9JHtwYXRofWAsIHtcbiAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICBjcmVkZW50aWFsczogJ2luY2x1ZGUnLFxuICAgIGJvZHk6IGZvcm1cbiAgfSk7XG4gIGlmICghcmVzLm9rKSB0aHJvdyBuZXcgRXJyb3IoYXdhaXQgcmVzLnRleHQoKSk7XG4gIHJldHVybiByZXMuanNvbigpO1xufVxuIl0sIm5hbWVzIjpbIkFQSV9VUkwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfQVBJX1VSTCIsImdldERvd25sb2FkVXJsIiwicmVxdWVzdElkIiwidHJhbnNjcmlwdFVybCIsInJlcyIsImZldGNoIiwiY3JlZGVudGlhbHMiLCJvayIsIkVycm9yIiwiZGF0YSIsImpzb24iLCJ1cmwiLCJkb3dubG9hZEZpbGUiLCJkb3dubG9hZFVybCIsImxpbmsiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJocmVmIiwiZG93bmxvYWQiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJjbGljayIsInJlbW92ZUNoaWxkIiwiZXJyb3IiLCJjb25zb2xlIiwiYXBpIiwicGF0aCIsImluaXQiLCJoZWFkZXJzIiwidGV4dCIsImFwaVVwbG9hZCIsImZvcm0iLCJtZXRob2QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api.ts\n"));

/***/ })

});